
@page
@model Frontendui.Pages.TestPage.IndexModel
@{
    ViewData["Title"] = "Test Management";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <h1>Test Management</h1>
            
            <!-- Search and Filter Section -->
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0">Search & Filter</h5>
                </div>
                <div class="card-body">
                    <form method="get">
                        <div class="row">
                            <!-- Search Term -->
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="searchTerm">Search:</label>
                                    <input type="text" 
                                           class="form-control" 
                                           id="searchTerm" 
                                           name="searchTerm" 
                                           value="@Model.SearchFilter.SearchTerm" 
                                           placeholder="Enter test name or description..." />
                                </div>
                            </div>
                            
                            <!-- Sort By -->
                            <div class="col-md-2">
                                <div class="form-group">
                                    <label for="sortBy">Sort By:</label>
                                    <select class="form-control" id="sortBy" name="sortBy">
                                        <option value="TestId" selected="@(Model.SearchFilter.SortBy == "TestId")">Test ID</option>
                                        <option value="TestName" selected="@(Model.SearchFilter.SortBy == "TestName")">Test Name</option>
                                        <option value="Description" selected="@(Model.SearchFilter.SortBy == "Description")">Description</option>
                                        
                                    </select>
                                </div>
                            </div>
                            
                            <!-- Sort Order -->
                            <div class="col-md-2">
                                <div class="form-group">
                                    <label for="sortDescending">Sort Order:</label>
                                    <select class="form-control" id="sortDescending" name="sortDescending">
                                        <option value="false" selected="@(!Model.SearchFilter.SortDescending)">Ascending</option>
                                        <option value="true" selected="@(Model.SearchFilter.SortDescending)">Descending</option>
                                    </select>
                                </div>
                            </div>
                            
                            <!-- Page Size -->
                            <div class="col-md-2">
                                <div class="form-group">
                                    <label for="pageSize">Items per page:</label>
                                    <select class="form-control" id="pageSize" name="pageSize">
                                        <option value="5" selected="@(Model.SearchFilter.PageSize == 5)">5</option>
                                        <option value="10" selected="@(Model.SearchFilter.PageSize == 10)">10</option>
                                        <option value="20" selected="@(Model.SearchFilter.PageSize == 20)">20</option>
                                        <option value="50" selected="@(Model.SearchFilter.PageSize == 50)">50</option>
                                    </select>
                                </div>
                            </div>
                            
                            <!-- Search Buttons -->
                            <div class="col-md-2">
                                <div class="form-group">
                                    <label>&nbsp;</label>
                                    <div class="d-flex">
                                        <button type="submit" class="btn btn-primary btn-sm me-2">
                                            <i class="fas fa-search"></i> Search
                                        </button>
                                        <a href="@Url.Page("./Index")" class="btn btn-secondary btn-sm">
                                            <i class="fas fa-times"></i> Clear
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Hidden field for page number -->
                        <input type="hidden" name="pageNumber" value="@Model.SearchFilter.PageNumber" />
                    </form>
                </div>
            </div>

            <!-- Results Summary -->
            @if (Model.PaginatedResult != null)
            {
                <div class="row mb-3">
                    <div class="col-md-6">
                        <div class="alert alert-info mb-0">
                            <strong>@Model.PaginatedResult.TotalRecords</strong> test(s) found
                            @if (!string.IsNullOrEmpty(Model.SearchFilter.SearchTerm))
                            {
                                <span> for "<strong>@Model.SearchFilter.SearchTerm</strong>"</span>
                            }
                            <br/>
                            Showing @((Model.PaginatedResult.PageNumber - 1) * Model.PaginatedResult.PageSize + 1) 
                            to @(Math.Min(Model.PaginatedResult.PageNumber * Model.PaginatedResult.PageSize, Model.PaginatedResult.TotalRecords)) 
                            of @Model.PaginatedResult.TotalRecords results
                        </div>
                    </div>
                    <div class="col-md-6 text-end">
                        <a asp-page="Create" class="btn btn-success">
                            <i class="fas fa-plus"></i> Create New Test
                        </a>
                    </div>
                </div>
            }
            else
            {
                <div class="row mb-3">
                    <div class="col-md-6">
                        <!-- Empty space for alignment -->
                    </div>
                    <div class="col-md-6 text-end">
                        <a asp-page="Create" class="btn btn-success">
                            <i class="fas fa-plus"></i> Create New Test
                        </a>
                    </div>
                </div>
            }

            <!-- Results Table -->
            @if (Model.PaginatedResult != null && Model.PaginatedResult.Data.Any())
            {
                <div class="table-responsive">
                    <table class="table table-striped table-hover">
                        <thead class="table-dark">
                            <tr>
                                <th>
                                    <a href="@Url.Page("./Index", new { 
                                        searchTerm = Model.SearchFilter.SearchTerm,
                                        sortBy = "TestId",
                                        sortDescending = Model.SearchFilter.SortBy == "TestId" ? !Model.SearchFilter.SortDescending : false,
                                        pageSize = Model.SearchFilter.PageSize,
                                        pageNumber = 1
                                    })" class="text-white text-decoration-none">
                                        Test ID
                                        @if (Model.SearchFilter.SortBy == "TestId")
                                        {
                                            <i class="fas fa-sort-@(Model.SearchFilter.SortDescending ? "down" : "up")"></i>
                                        }
                                    </a>
                                </th>
                                <th>
                                    <a href="@Url.Page("./Index", new { 
                                        searchTerm = Model.SearchFilter.SearchTerm,
                                        sortBy = "TestName",
                                        sortDescending = Model.SearchFilter.SortBy == "TestName" ? !Model.SearchFilter.SortDescending : false,
                                        pageSize = Model.SearchFilter.PageSize,
                                        pageNumber = 1
                                    })" class="text-white text-decoration-none">
                                        Test Name
                                        @if (Model.SearchFilter.SortBy == "TestName")
                                        {
                                            <i class="fas fa-sort-@(Model.SearchFilter.SortDescending ? "down" : "up")"></i>
                                        }
                                    </a>
                                </th>
                                <th>
                                    <a href="@Url.Page("./Index", new { 
                                        searchTerm = Model.SearchFilter.SearchTerm,
                                        sortBy = "Description",
                                        sortDescending = Model.SearchFilter.SortBy == "Description" ? !Model.SearchFilter.SortDescending : false,
                                        pageSize = Model.SearchFilter.PageSize,
                                        pageNumber = 1
                                    })" class="text-white text-decoration-none">
                                        Description
                                        @if (Model.SearchFilter.SortBy == "Description")
                                        {
                                            <i class="fas fa-sort-@(Model.SearchFilter.SortDescending ? "down" : "up")"></i>
                                        }
                                    </a>
                                </th>
                                <th class="text-center">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.PaginatedResult.Data)
                            {
                                <tr>
                                    <td>
                                        <strong>@Html.DisplayFor(modelItem => item.TestId)</strong>
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.TestName)
                                    </td>
                                    <td>
                                        @{
                                            var description = item.Description;
                                            var maxLength = 100;
                                            if (description?.Length > maxLength)
                                            {
                                                description = description.Substring(0, maxLength) + "...";
                                            }
                                        }
                                        <span title="@item.Description">@description</span>
                                    </td>
                                    <td class="text-center">
                                        <div class="btn-group" role="group">
                                            <a asp-page="./Details" asp-route-id="@item.TestId" 
                                               class="btn btn-sm btn-outline-info" title="View Details">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                            <a asp-page="./Edit" asp-route-id="@item.TestId" 
                                               class="btn btn-sm btn-outline-warning" title="Edit">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                            <a asp-page="./Delete" asp-route-id="@item.TestId" 
                                               class="btn btn-sm btn-outline-danger" title="Delete">
                                                <i class="fas fa-trash"></i>
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <!-- Pagination -->
                @if (Model.PaginatedResult.TotalPages > 1)
                {
                    <nav aria-label="Test pagination">
                        <ul class="pagination justify-content-center">
                            <!-- Previous Button -->
                            <li class="page-item @(!Model.PaginatedResult.HasPreviousPage ? "disabled" : "")">
                                @if (Model.PaginatedResult.HasPreviousPage)
                                {
                                    <a class="page-link" href="@Url.Page("./Index", new { 
                                        searchTerm = Model.SearchFilter.SearchTerm,
                                        sortBy = Model.SearchFilter.SortBy,
                                        sortDescending = Model.SearchFilter.SortDescending,
                                        pageSize = Model.SearchFilter.PageSize,
                                        pageNumber = Model.PaginatedResult.PageNumber - 1
                                    })">Previous</a>
                                }
                                else
                                {
                                    <span class="page-link">Previous</span>
                                }
                            </li>

                            <!-- Page Numbers -->
                            @{
                                var startPage = Math.Max(1, Model.PaginatedResult.PageNumber - 2);
                                var endPage = Math.Min(Model.PaginatedResult.TotalPages, Model.PaginatedResult.PageNumber + 2);
                            }

                            @if (startPage > 1)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@Url.Page("./Index", new { 
                                        searchTerm = Model.SearchFilter.SearchTerm,
                                        sortBy = Model.SearchFilter.SortBy,
                                        sortDescending = Model.SearchFilter.SortDescending,
                                        pageSize = Model.SearchFilter.PageSize,
                                        pageNumber = 1
                                    })">1</a>
                                </li>
                                @if (startPage > 2)
                                {
                                    <li class="page-item disabled">
                                        <span class="page-link">...</span>
                                    </li>
                                }
                            }

                            @for (int i = startPage; i <= endPage; i++)
                            {
                                <li class="page-item @(i == Model.PaginatedResult.PageNumber ? "active" : "")">
                                    @if (i == Model.PaginatedResult.PageNumber)
                                    {
                                        <span class="page-link">@i</span>
                                    }
                                    else
                                    {
                                        <a class="page-link" href="@Url.Page("./Index", new { 
                                            searchTerm = Model.SearchFilter.SearchTerm,
                                            sortBy = Model.SearchFilter.SortBy,
                                            sortDescending = Model.SearchFilter.SortDescending,
                                            pageSize = Model.SearchFilter.PageSize,
                                            pageNumber = i
                                        })">@i</a>
                                    }
                                </li>
                            }

                            @if (endPage < Model.PaginatedResult.TotalPages)
                            {
                                @if (endPage < Model.PaginatedResult.TotalPages - 1)
                                {
                                    <li class="page-item disabled">
                                        <span class="page-link">...</span>
                                    </li>
                                }
                                <li class="page-item">
                                    <a class="page-link" href="@Url.Page("./Index", new { 
                                        searchTerm = Model.SearchFilter.SearchTerm,
                                        sortBy = Model.SearchFilter.SortBy,
                                        sortDescending = Model.SearchFilter.SortDescending,
                                        pageSize = Model.SearchFilter.PageSize,
                                        pageNumber = Model.PaginatedResult.TotalPages
                                    })">@Model.PaginatedResult.TotalPages</a>
                                </li>
                            }

                            <!-- Next Button -->
                            <li class="page-item @(!Model.PaginatedResult.HasNextPage ? "disabled" : "")">
                                @if (Model.PaginatedResult.HasNextPage)
                                {
                                    <a class="page-link" href="@Url.Page("./Index", new { 
                                        searchTerm = Model.SearchFilter.SearchTerm,
                                        sortBy = Model.SearchFilter.SortBy,
                                        sortDescending = Model.SearchFilter.SortDescending,
                                        pageSize = Model.SearchFilter.PageSize,
                                        pageNumber = Model.PaginatedResult.PageNumber + 1
                                    })">Next</a>
                                }
                                else
                                {
                                    <span class="page-link">Next</span>
                                }
                            </li>
                        </ul>
                    </nav>
                }
            }
            else
            {
                <!-- No Results Message -->
                <div class="alert alert-warning text-center">
                    <h4><i class="fas fa-search"></i> No tests found</h4>
                    @if (!string.IsNullOrEmpty(Model.SearchFilter.SearchTerm))
                    {
                        <p>No tests found matching "<strong>@Model.SearchFilter.SearchTerm</strong>".</p>
                        <p>Try adjusting your search criteria or <a href="@Url.Page("./Index")">view all tests</a>.</p>
                    }
                    else
                    {
                        <p>There are currently no tests in the system.</p>
                        <p><a asp-page="Create" class="btn btn-primary">Create a new test</a> to get started.</p>
                    }
                </div>
            }
        </div>
    </div>
</div>

<!-- Add some custom CSS for better UX -->
<style>
    .table th a {
        display: block;
        color: inherit !important;
    }
    .table th a:hover {
        background-color: rgba(255, 255, 255, 0.1);
    }
    .btn-group .btn {
        margin: 0 1px;
    }
    .alert-info {
        font-size: 0.9rem;
    }
    .pagination .page-link {
        color: #007bff;
    }
    .pagination .page-item.active .page-link {
        background-color: #007bff;
        border-color: #007bff;
    }
</style>